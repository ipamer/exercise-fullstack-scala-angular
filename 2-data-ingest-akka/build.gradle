apply plugin: 'scala'

repositories {
    mavenCentral()
}

def scalaVersion = "2.12.10"
def scalaMajorVersion = "2.12"
def scalaTestVersion = "3.0.8"

// def slf4jVersion = "1.7.28"
// def scalaLoggingVersion = "3.9.2"
// def logbackVersion = "1.2.3"

def sparkVersion = "2.4.4"

def akkaVersion = "2.6.4"
def akkaKafkaVersion = "2.0.2"
def akkaHttpVersion = "10.1.11"

dependencies {
    // - Scala
    compile "org.scala-lang:scala-library:$scalaVersion"

    // - Logging
    // compile "org.slf4j:slf4j-api:$slf4jVersion"
    // compile "org.slf4j:slf4j-simple:$slf4jVersion"
    // compile "com.typesafe.scala-logging:scala-logging_$scalaMajorVersion:$scalaLoggingVersion"
    // runtime "ch.qos.logback:logback-classic:$logbackVersion"

    // - Testing
    testImplementation "org.scalatest:scalatest_$scalaMajorVersion:$scalaTestVersion"
    testImplementation 'junit:junit:4.12'    // then you can right click a test to run in IntelliJ. Test has to be annotated with: @RunWith(classOf[JUnitRunner])

    // - Spark
    // compile "org.apache.spark:spark-core_$scalaMajorVersion:$sparkVersion"
    // compile "org.apache.spark:spark-sql_$scalaMajorVersion:$sparkVersion"
    // compile "org.apache.spark:spark-streaming_$scalaMajorVersion:$sparkVersion"
    // Spark - Kafka
    // compile "org.apache.spark:spark-sql-kafka-0-10_$scalaMajorVersion:$sparkVersion"

    // - WebSocket
    // compile "com.github.andyglow:websocket-scala-client_$scalaMajorVersion:0.3.0"

    // - Akka
    compile "com.typesafe.akka:akka-actor-typed_$scalaMajorVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-stream-typed_$scalaMajorVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-stream-kafka_$scalaMajorVersion:$akkaKafkaVersion"
    compile "com.typesafe.akka:akka-http_$scalaMajorVersion:$akkaHttpVersion"
    testCompile "com.typesafe.akka:akka-actor-testkit-typed_$scalaMajorVersion:$akkaVersion"

    // - JSON
    // compile "io.spray:spray-json_$scalaMajorVersion:1.3.5"
    compile "net.liftweb:lift-json_$scalaMajorVersion:3.4.1"
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}
test.dependsOn scalaTest    // testing includes scalaTest

task run(type: JavaExec, dependsOn: classes) {
    main = 'com.mymeetup.App'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}
